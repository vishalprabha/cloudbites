---
version: '2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    restart: on-failure
    networks:
      - kafka_network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    #labels:
    #  kompose.service.type: LoadBalancer   

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    #restart: on-failure
    networks:
      - kafka_network
    depends_on:
      - zookeeper
    ports:
      - 29090:29090
      - 29093:29093
    environment:
      
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: EXTERNAL_SAME_HOST://:29090,INTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL_SAME_HOST://localhost:29090
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL_SAME_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL 
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    #labels:
    #  kompose.service.type: LoadBalancer
#,EXTERNAL_DIFFERENT_HOST://98.245.167.160:29093
  redis:
    image: redis
    networks:
      - kafka_network
    ports:
      - 6379:6379
    depends_on:
      - kafka
  

    
  kafka-consumer:
    container_name: kafka-consumer
    restart: always
    image: "soma5722/kafka-consumer:latest"
    networks:
      - kafka_network
    depends_on:
      - redis

  kafka-producer:
    container_name: kafka-producer
    restart: always
    image: "soma5722/kafka-producer:latest"
    networks:
      - kafka_network
    depends_on:
     - kafka-consumer  

networks:
  kafka_network:
    name: kafka_docker_example_net
#docker-compose up
#producer cmd: docker run -it --rm --network kafka_docker_example_net confluentinc/cp-kafka /bin/kafka-console-producer --bootstrap-server kafka:9092 --topic tweet_stream
#consumer cmd: docker run -it --rm --network kafka_docker_example_net confluentinc/cp-kafka /bin/kafka-console-consumer --bootstrap-server kafka:9092 --topic tweet_stream